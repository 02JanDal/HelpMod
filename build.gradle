buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.multimc:quickmod-gradle:1.3.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'quickmod'
apply plugin: 'jdepend'

ext.configFile = file('build.properties')

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    //noinspection GroovyAssignabilityCheck
    prop.load(it)
    ext.config = prop
}

group = "com.github.robotbrain.helpmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "helpmod"
sourceCompatibility = '1.6'
targetCompatibility = '1.6'
version = config['modVersion']

minecraft {
    version = "${config['mcVersion']}-${config['forgeVersion']}"
    runDir = 'run'

    // replacing
    replace "@VERSION@", project.version
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

if (System.getenv().CI) {
    version = "${version}.${System.getenv().BUILD_NUMBER}"
} else {
    version = "${version}-dev"
}

version = "${minecraft.version}-$version"

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

import net.minecraftforge.gradle.delayed.DelayedFile

reobf { deobfFile = new DelayedFile(project, "build/tmp/deobfBinJar/deobfed.jar") }

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives deobfJar
    archives jar
}